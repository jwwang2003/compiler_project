Grammar

    0 $accept: Program $end

    1 Program: ProgramElementList

    2 ProgramElementList: ProgramElement ProgramElementList
    3                   | ε

    4 ProgramElement: VarDeclStmt
    5               | StructDef
    6               | FnDeclStmt
    7               | FnDef
    8               | SEMICOLON

    9 Type: INT
   10     | ID

   11 StructDef: STRUCT ID LBRACE VarDeclList RBRACE

   12 VarDeclStmt: LET VarDecl SEMICOLON
   13            | LET VarDef SEMICOLON

   14 VarDeclList: VarDecl
   15            | VarDecl COMMA VarDeclList
   16            | ε

   17 VarDecl: ID LBRACKET NUM RBRACKET COLON Type
   18        | ID LBRACKET NUM RBRACKET
   19        | ID COLON Type
   20        | ID

   21 VarDef: ID LBRACKET NUM RBRACKET COLON Type ASSIGN LBRACE RightValList RBRACE
   22       | ID LBRACKET NUM RBRACKET ASSIGN LBRACE RightValList RBRACE
   23       | ID COLON Type ASSIGN RightVal
   24       | ID ASSIGN RightVal

   25 RightValList: RightVal
   26             | RightVal COMMA RightValList
   27             | ε

   28 RightVal: ArithExpr

   29 LeftVal: ID
   30        | LeftVal LBRACKET ID RBRACKET
   31        | LeftVal LBRACKET NUM RBRACKET
   32        | LeftVal DOT ID

   33 FnDeclStmt: FnDecl SEMICOLON

   34 FnDecl: FN ID LPAREN ParamDecl RPAREN ARROW Type
   35       | FN ID LPAREN ParamDecl RPAREN

   36 ParamDecl: VarDeclList

   37 FnDef: FnDecl CodeBlock

   38 CodeBlock: LBRACE CodeBlockStmtList RBRACE

   39 CodeBlockStmtList: ε
   40                  | CodeBlockStmt CodeBlockStmtList

   41 CodeBlockStmt: VarDeclStmt
   42              | AssignStmt
   43              | CallStmt
   44              | IfStmt
   45              | WhileStmt
   46              | ReturnStmt
   47              | CONTINUE SEMICOLON
   48              | BREAK SEMICOLON
   49              | SEMICOLON

   50 AssignStmt: LeftVal ASSIGN RightVal SEMICOLON

   51 CallStmt: FnCall SEMICOLON

   52 FnCall: ID LPAREN RightValList RPAREN

   53 IfStmt: IF BoolUnit CodeBlock
   54       | IF BoolUnit CodeBlock ELSE CodeBlock

   55 WhileStmt: WHILE BoolUnit CodeBlock

   56 ReturnStmt: RET RightVal SEMICOLON
   57           | RET SEMICOLON

   58 ArithExpr: ArithExpr ADD ArithExpr
   59          | ArithExpr SUB ArithExpr
   60          | ArithExpr MUL ArithExpr
   61          | ArithExpr DIV ArithExpr
   62          | ExprUnit

   63 ExprUnit: NUM
   64         | ID
   65         | LPAREN ArithExpr RPAREN
   66         | FnCall
   67         | LeftVal LBRACKET ID RBRACKET
   68         | LeftVal LBRACKET NUM RBRACKET
   69         | LeftVal DOT ID
   70         | SUB ExprUnit

   71 BoolUnit: LPAREN ExprUnit ComOp ExprUnit RPAREN
   72         | LPAREN BoolExpr RPAREN
   73         | LPAREN BoolUOp BoolUnit RPAREN

   74 BoolExpr: BoolExpr AND BoolExpr
   75         | BoolExpr OR BoolExpr
   76         | BoolUnit

   77 BoolUOp: NOT

   78 ComOp: LT
   79      | LE
   80      | GT
   81      | GE
   82      | EQ
   83      | NEQ


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <tokenId> (258) 10 11 17 18 19 20 21 22 23 24 29 30 32 34 35 52 64 67 69
    NUM <tokenNum> (259) 17 18 21 22 31 63 68
    INT <pos> (260) 9
    MUL <pos> (261) 60
    DIV <pos> (262) 61
    ADD <pos> (263) 58
    SUB <pos> (264) 59 70
    NOT <pos> (265) 77
    AND <pos> (266) 74
    OR <pos> (267) 75
    LT <pos> (268) 78
    LE <pos> (269) 79
    GT <pos> (270) 80
    GE <pos> (271) 81
    EQ <pos> (272) 82
    NEQ <pos> (273) 83
    NEG <pos> (274)
    LPAREN <pos> (275) 34 35 52 65 71 72 73
    RPAREN <pos> (276) 34 35 52 65 71 72 73
    LBRACE <pos> (277) 11 21 22 38
    RBRACE <pos> (278) 11 21 22 38
    LBRACKET <pos> (279) 17 18 21 22 30 31 67 68
    RBRACKET <pos> (280) 17 18 21 22 30 31 67 68
    ASSIGN <pos> (281) 21 22 23 24 50
    COMMA <pos> (282) 15 26
    SEMICOLON <pos> (283) 8 12 13 33 47 48 49 50 51 56 57
    COLON <pos> (284) 17 19 21 23
    DOT <pos> (285) 32 69
    FN <pos> (286) 34 35
    ARROW <pos> (287) 34
    LET <pos> (288) 12 13
    STRUCT <pos> (289) 11
    BREAK <pos> (290) 48
    CONTINUE <pos> (291) 47
    WHILE <pos> (292) 55
    IF <pos> (293) 53 54
    ELSE <pos> (294) 54
    RET <pos> (295) 56 57


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    Program <program> (42)
        on left: 1
        on right: 0
    ProgramElementList <programElementList> (43)
        on left: 2 3
        on right: 1 2
    ProgramElement <programElement> (44)
        on left: 4 5 6 7 8
        on right: 2
    Type <type> (45)
        on left: 9 10
        on right: 17 19 21 23 34
    StructDef <structDef> (46)
        on left: 11
        on right: 5
    VarDeclStmt <varDeclStmt> (47)
        on left: 12 13
        on right: 4 41
    VarDeclList <varDeclList> (48)
        on left: 14 15 16
        on right: 11 15 36
    VarDecl <varDecl> (49)
        on left: 17 18 19 20
        on right: 12 14 15
    VarDef <varDef> (50)
        on left: 21 22 23 24
        on right: 13
    RightValList <rightValList> (51)
        on left: 25 26 27
        on right: 21 22 26 52
    RightVal <rightVal> (52)
        on left: 28
        on right: 23 24 25 26 50 56
    LeftVal <leftVal> (53)
        on left: 29 30 31 32
        on right: 30 31 32 50 67 68 69
    FnDeclStmt <fnDeclStmt> (54)
        on left: 33
        on right: 6
    FnDecl <fnDecl> (55)
        on left: 34 35
        on right: 33 37
    ParamDecl <paramDecl> (56)
        on left: 36
        on right: 34 35
    FnDef <fnDef> (57)
        on left: 37
        on right: 7
    CodeBlock <codeBlockStmtList> (58)
        on left: 38
        on right: 37 53 54 55
    CodeBlockStmtList <codeBlockStmtList> (59)
        on left: 39 40
        on right: 38 40
    CodeBlockStmt <codeBlockStmt> (60)
        on left: 41 42 43 44 45 46 47 48 49
        on right: 40
    AssignStmt <assignStmt> (61)
        on left: 50
        on right: 42
    CallStmt <callStmt> (62)
        on left: 51
        on right: 43
    FnCall <fnCall> (63)
        on left: 52
        on right: 51 66
    IfStmt <ifStmt> (64)
        on left: 53 54
        on right: 44
    WhileStmt <whileStmt> (65)
        on left: 55
        on right: 45
    ReturnStmt <returnStmt> (66)
        on left: 56 57
        on right: 46
    ArithExpr <arithExpr> (67)
        on left: 58 59 60 61 62
        on right: 28 58 59 60 61 65
    ExprUnit <exprUnit> (68)
        on left: 63 64 65 66 67 68 69 70
        on right: 62 70 71
    BoolUnit <boolUnit> (69)
        on left: 71 72 73
        on right: 53 54 55 73 76
    BoolExpr <boolExpr> (70)
        on left: 74 75 76
        on right: 72 74 75
    BoolUOp <boolUOp> (71)
        on left: 77
        on right: 73
    ComOp <comOp> (72)
        on left: 78 79 80 81 82 83
        on right: 71


State 0

    0 $accept: • Program $end

    SEMICOLON  shift, and go to state 1
    FN         shift, and go to state 2
    LET        shift, and go to state 3
    STRUCT     shift, and go to state 4

    $default  reduce using rule 3 (ProgramElementList)

    Program             go to state 5
    ProgramElementList  go to state 6
    ProgramElement      go to state 7
    StructDef           go to state 8
    VarDeclStmt         go to state 9
    FnDeclStmt          go to state 10
    FnDecl              go to state 11
    FnDef               go to state 12


State 1

    8 ProgramElement: SEMICOLON •

    $default  reduce using rule 8 (ProgramElement)


State 2

   34 FnDecl: FN • ID LPAREN ParamDecl RPAREN ARROW Type
   35       | FN • ID LPAREN ParamDecl RPAREN

    ID  shift, and go to state 13


State 3

   12 VarDeclStmt: LET • VarDecl SEMICOLON
   13            | LET • VarDef SEMICOLON

    ID  shift, and go to state 14

    VarDecl  go to state 15
    VarDef   go to state 16


State 4

   11 StructDef: STRUCT • ID LBRACE VarDeclList RBRACE

    ID  shift, and go to state 17


State 5

    0 $accept: Program • $end

    $end  shift, and go to state 18


State 6

    1 Program: ProgramElementList •

    $default  reduce using rule 1 (Program)


State 7

    2 ProgramElementList: ProgramElement • ProgramElementList

    SEMICOLON  shift, and go to state 1
    FN         shift, and go to state 2
    LET        shift, and go to state 3
    STRUCT     shift, and go to state 4

    $default  reduce using rule 3 (ProgramElementList)

    ProgramElementList  go to state 19
    ProgramElement      go to state 7
    StructDef           go to state 8
    VarDeclStmt         go to state 9
    FnDeclStmt          go to state 10
    FnDecl              go to state 11
    FnDef               go to state 12


State 8

    5 ProgramElement: StructDef •

    $default  reduce using rule 5 (ProgramElement)


State 9

    4 ProgramElement: VarDeclStmt •

    $default  reduce using rule 4 (ProgramElement)


State 10

    6 ProgramElement: FnDeclStmt •

    $default  reduce using rule 6 (ProgramElement)


State 11

   33 FnDeclStmt: FnDecl • SEMICOLON
   37 FnDef: FnDecl • CodeBlock

    LBRACE     shift, and go to state 20
    SEMICOLON  shift, and go to state 21

    CodeBlock  go to state 22


State 12

    7 ProgramElement: FnDef •

    $default  reduce using rule 7 (ProgramElement)


State 13

   34 FnDecl: FN ID • LPAREN ParamDecl RPAREN ARROW Type
   35       | FN ID • LPAREN ParamDecl RPAREN

    LPAREN  shift, and go to state 23


State 14

   17 VarDecl: ID • LBRACKET NUM RBRACKET COLON Type
   18        | ID • LBRACKET NUM RBRACKET
   19        | ID • COLON Type
   20        | ID •
   21 VarDef: ID • LBRACKET NUM RBRACKET COLON Type ASSIGN LBRACE RightValList RBRACE
   22       | ID • LBRACKET NUM RBRACKET ASSIGN LBRACE RightValList RBRACE
   23       | ID • COLON Type ASSIGN RightVal
   24       | ID • ASSIGN RightVal

    LBRACKET  shift, and go to state 24
    ASSIGN    shift, and go to state 25
    COLON     shift, and go to state 26

    $default  reduce using rule 20 (VarDecl)


State 15

   12 VarDeclStmt: LET VarDecl • SEMICOLON

    SEMICOLON  shift, and go to state 27


State 16

   13 VarDeclStmt: LET VarDef • SEMICOLON

    SEMICOLON  shift, and go to state 28


State 17

   11 StructDef: STRUCT ID • LBRACE VarDeclList RBRACE

    LBRACE  shift, and go to state 29


State 18

    0 $accept: Program $end •

    $default  accept


State 19

    2 ProgramElementList: ProgramElement ProgramElementList •

    $default  reduce using rule 2 (ProgramElementList)


State 20

   38 CodeBlock: LBRACE • CodeBlockStmtList RBRACE

    ID         shift, and go to state 30
    SEMICOLON  shift, and go to state 31
    LET        shift, and go to state 3
    BREAK      shift, and go to state 32
    CONTINUE   shift, and go to state 33
    WHILE      shift, and go to state 34
    IF         shift, and go to state 35
    RET        shift, and go to state 36

    $default  reduce using rule 39 (CodeBlockStmtList)

    VarDeclStmt        go to state 37
    LeftVal            go to state 38
    CodeBlockStmtList  go to state 39
    CodeBlockStmt      go to state 40
    AssignStmt         go to state 41
    CallStmt           go to state 42
    FnCall             go to state 43
    IfStmt             go to state 44
    WhileStmt          go to state 45
    ReturnStmt         go to state 46


State 21

   33 FnDeclStmt: FnDecl SEMICOLON •

    $default  reduce using rule 33 (FnDeclStmt)


State 22

   37 FnDef: FnDecl CodeBlock •

    $default  reduce using rule 37 (FnDef)


State 23

   34 FnDecl: FN ID LPAREN • ParamDecl RPAREN ARROW Type
   35       | FN ID LPAREN • ParamDecl RPAREN

    ID  shift, and go to state 47

    $default  reduce using rule 16 (VarDeclList)

    VarDeclList  go to state 48
    VarDecl      go to state 49
    ParamDecl    go to state 50


State 24

   17 VarDecl: ID LBRACKET • NUM RBRACKET COLON Type
   18        | ID LBRACKET • NUM RBRACKET
   21 VarDef: ID LBRACKET • NUM RBRACKET COLON Type ASSIGN LBRACE RightValList RBRACE
   22       | ID LBRACKET • NUM RBRACKET ASSIGN LBRACE RightValList RBRACE

    NUM  shift, and go to state 51


State 25

   24 VarDef: ID ASSIGN • RightVal

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    LPAREN  shift, and go to state 55

    RightVal   go to state 56
    LeftVal    go to state 57
    FnCall     go to state 58
    ArithExpr  go to state 59
    ExprUnit   go to state 60


State 26

   19 VarDecl: ID COLON • Type
   23 VarDef: ID COLON • Type ASSIGN RightVal

    ID   shift, and go to state 61
    INT  shift, and go to state 62

    Type  go to state 63


State 27

   12 VarDeclStmt: LET VarDecl SEMICOLON •

    $default  reduce using rule 12 (VarDeclStmt)


State 28

   13 VarDeclStmt: LET VarDef SEMICOLON •

    $default  reduce using rule 13 (VarDeclStmt)


State 29

   11 StructDef: STRUCT ID LBRACE • VarDeclList RBRACE

    ID  shift, and go to state 47

    $default  reduce using rule 16 (VarDeclList)

    VarDeclList  go to state 64
    VarDecl      go to state 49


State 30

   29 LeftVal: ID •
   52 FnCall: ID • LPAREN RightValList RPAREN

    LPAREN  shift, and go to state 65

    $default  reduce using rule 29 (LeftVal)


State 31

   49 CodeBlockStmt: SEMICOLON •

    $default  reduce using rule 49 (CodeBlockStmt)


State 32

   48 CodeBlockStmt: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 66


State 33

   47 CodeBlockStmt: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 67


State 34

   55 WhileStmt: WHILE • BoolUnit CodeBlock

    LPAREN  shift, and go to state 68

    BoolUnit  go to state 69


State 35

   53 IfStmt: IF • BoolUnit CodeBlock
   54       | IF • BoolUnit CodeBlock ELSE CodeBlock

    LPAREN  shift, and go to state 68

    BoolUnit  go to state 70


State 36

   56 ReturnStmt: RET • RightVal SEMICOLON
   57           | RET • SEMICOLON

    ID         shift, and go to state 52
    NUM        shift, and go to state 53
    SUB        shift, and go to state 54
    LPAREN     shift, and go to state 55
    SEMICOLON  shift, and go to state 71

    RightVal   go to state 72
    LeftVal    go to state 57
    FnCall     go to state 58
    ArithExpr  go to state 59
    ExprUnit   go to state 60


State 37

   41 CodeBlockStmt: VarDeclStmt •

    $default  reduce using rule 41 (CodeBlockStmt)


State 38

   30 LeftVal: LeftVal • LBRACKET ID RBRACKET
   31        | LeftVal • LBRACKET NUM RBRACKET
   32        | LeftVal • DOT ID
   50 AssignStmt: LeftVal • ASSIGN RightVal SEMICOLON

    LBRACKET  shift, and go to state 73
    ASSIGN    shift, and go to state 74
    DOT       shift, and go to state 75


State 39

   38 CodeBlock: LBRACE CodeBlockStmtList • RBRACE

    RBRACE  shift, and go to state 76


State 40

   40 CodeBlockStmtList: CodeBlockStmt • CodeBlockStmtList

    ID         shift, and go to state 30
    SEMICOLON  shift, and go to state 31
    LET        shift, and go to state 3
    BREAK      shift, and go to state 32
    CONTINUE   shift, and go to state 33
    WHILE      shift, and go to state 34
    IF         shift, and go to state 35
    RET        shift, and go to state 36

    $default  reduce using rule 39 (CodeBlockStmtList)

    VarDeclStmt        go to state 37
    LeftVal            go to state 38
    CodeBlockStmtList  go to state 77
    CodeBlockStmt      go to state 40
    AssignStmt         go to state 41
    CallStmt           go to state 42
    FnCall             go to state 43
    IfStmt             go to state 44
    WhileStmt          go to state 45
    ReturnStmt         go to state 46


State 41

   42 CodeBlockStmt: AssignStmt •

    $default  reduce using rule 42 (CodeBlockStmt)


State 42

   43 CodeBlockStmt: CallStmt •

    $default  reduce using rule 43 (CodeBlockStmt)


State 43

   51 CallStmt: FnCall • SEMICOLON

    SEMICOLON  shift, and go to state 78


State 44

   44 CodeBlockStmt: IfStmt •

    $default  reduce using rule 44 (CodeBlockStmt)


State 45

   45 CodeBlockStmt: WhileStmt •

    $default  reduce using rule 45 (CodeBlockStmt)


State 46

   46 CodeBlockStmt: ReturnStmt •

    $default  reduce using rule 46 (CodeBlockStmt)


State 47

   17 VarDecl: ID • LBRACKET NUM RBRACKET COLON Type
   18        | ID • LBRACKET NUM RBRACKET
   19        | ID • COLON Type
   20        | ID •

    LBRACKET  shift, and go to state 79
    COLON     shift, and go to state 80

    $default  reduce using rule 20 (VarDecl)


State 48

   36 ParamDecl: VarDeclList •

    $default  reduce using rule 36 (ParamDecl)


State 49

   14 VarDeclList: VarDecl •
   15            | VarDecl • COMMA VarDeclList

    COMMA  shift, and go to state 81

    $default  reduce using rule 14 (VarDeclList)


State 50

   34 FnDecl: FN ID LPAREN ParamDecl • RPAREN ARROW Type
   35       | FN ID LPAREN ParamDecl • RPAREN

    RPAREN  shift, and go to state 82


State 51

   17 VarDecl: ID LBRACKET NUM • RBRACKET COLON Type
   18        | ID LBRACKET NUM • RBRACKET
   21 VarDef: ID LBRACKET NUM • RBRACKET COLON Type ASSIGN LBRACE RightValList RBRACE
   22       | ID LBRACKET NUM • RBRACKET ASSIGN LBRACE RightValList RBRACE

    RBRACKET  shift, and go to state 83


State 52

   29 LeftVal: ID •
   52 FnCall: ID • LPAREN RightValList RPAREN
   64 ExprUnit: ID •

    LPAREN  shift, and go to state 65

    LBRACKET  reduce using rule 29 (LeftVal)
    DOT       reduce using rule 29 (LeftVal)
    $default  reduce using rule 64 (ExprUnit)


State 53

   63 ExprUnit: NUM •

    $default  reduce using rule 63 (ExprUnit)


State 54

   70 ExprUnit: SUB • ExprUnit

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    LPAREN  shift, and go to state 55

    LeftVal   go to state 57
    FnCall    go to state 58
    ExprUnit  go to state 84


State 55

   65 ExprUnit: LPAREN • ArithExpr RPAREN

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    LPAREN  shift, and go to state 55

    LeftVal    go to state 57
    FnCall     go to state 58
    ArithExpr  go to state 85
    ExprUnit   go to state 60


State 56

   24 VarDef: ID ASSIGN RightVal •

    $default  reduce using rule 24 (VarDef)


State 57

   30 LeftVal: LeftVal • LBRACKET ID RBRACKET
   31        | LeftVal • LBRACKET NUM RBRACKET
   32        | LeftVal • DOT ID
   67 ExprUnit: LeftVal • LBRACKET ID RBRACKET
   68         | LeftVal • LBRACKET NUM RBRACKET
   69         | LeftVal • DOT ID

    LBRACKET  shift, and go to state 86
    DOT       shift, and go to state 87


State 58

   66 ExprUnit: FnCall •

    $default  reduce using rule 66 (ExprUnit)


State 59

   28 RightVal: ArithExpr •
   58 ArithExpr: ArithExpr • ADD ArithExpr
   59          | ArithExpr • SUB ArithExpr
   60          | ArithExpr • MUL ArithExpr
   61          | ArithExpr • DIV ArithExpr

    MUL  shift, and go to state 88
    DIV  shift, and go to state 89
    ADD  shift, and go to state 90
    SUB  shift, and go to state 91

    $default  reduce using rule 28 (RightVal)


State 60

   62 ArithExpr: ExprUnit •

    $default  reduce using rule 62 (ArithExpr)


State 61

   10 Type: ID •

    $default  reduce using rule 10 (Type)


State 62

    9 Type: INT •

    $default  reduce using rule 9 (Type)


State 63

   19 VarDecl: ID COLON Type •
   23 VarDef: ID COLON Type • ASSIGN RightVal

    ASSIGN  shift, and go to state 92

    $default  reduce using rule 19 (VarDecl)


State 64

   11 StructDef: STRUCT ID LBRACE VarDeclList • RBRACE

    RBRACE  shift, and go to state 93


State 65

   52 FnCall: ID LPAREN • RightValList RPAREN

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    LPAREN  shift, and go to state 55

    $default  reduce using rule 27 (RightValList)

    RightValList  go to state 94
    RightVal      go to state 95
    LeftVal       go to state 57
    FnCall        go to state 58
    ArithExpr     go to state 59
    ExprUnit      go to state 60


State 66

   48 CodeBlockStmt: BREAK SEMICOLON •

    $default  reduce using rule 48 (CodeBlockStmt)


State 67

   47 CodeBlockStmt: CONTINUE SEMICOLON •

    $default  reduce using rule 47 (CodeBlockStmt)


State 68

   71 BoolUnit: LPAREN • ExprUnit ComOp ExprUnit RPAREN
   72         | LPAREN • BoolExpr RPAREN
   73         | LPAREN • BoolUOp BoolUnit RPAREN

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    NOT     shift, and go to state 96
    LPAREN  shift, and go to state 97

    LeftVal   go to state 57
    FnCall    go to state 58
    ExprUnit  go to state 98
    BoolUnit  go to state 99
    BoolExpr  go to state 100
    BoolUOp   go to state 101


State 69

   55 WhileStmt: WHILE BoolUnit • CodeBlock

    LBRACE  shift, and go to state 20

    CodeBlock  go to state 102


State 70

   53 IfStmt: IF BoolUnit • CodeBlock
   54       | IF BoolUnit • CodeBlock ELSE CodeBlock

    LBRACE  shift, and go to state 20

    CodeBlock  go to state 103


State 71

   57 ReturnStmt: RET SEMICOLON •

    $default  reduce using rule 57 (ReturnStmt)


State 72

   56 ReturnStmt: RET RightVal • SEMICOLON

    SEMICOLON  shift, and go to state 104


State 73

   30 LeftVal: LeftVal LBRACKET • ID RBRACKET
   31        | LeftVal LBRACKET • NUM RBRACKET

    ID   shift, and go to state 105
    NUM  shift, and go to state 106


State 74

   50 AssignStmt: LeftVal ASSIGN • RightVal SEMICOLON

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    LPAREN  shift, and go to state 55

    RightVal   go to state 107
    LeftVal    go to state 57
    FnCall     go to state 58
    ArithExpr  go to state 59
    ExprUnit   go to state 60


State 75

   32 LeftVal: LeftVal DOT • ID

    ID  shift, and go to state 108


State 76

   38 CodeBlock: LBRACE CodeBlockStmtList RBRACE •

    $default  reduce using rule 38 (CodeBlock)


State 77

   40 CodeBlockStmtList: CodeBlockStmt CodeBlockStmtList •

    $default  reduce using rule 40 (CodeBlockStmtList)


State 78

   51 CallStmt: FnCall SEMICOLON •

    $default  reduce using rule 51 (CallStmt)


State 79

   17 VarDecl: ID LBRACKET • NUM RBRACKET COLON Type
   18        | ID LBRACKET • NUM RBRACKET

    NUM  shift, and go to state 109


State 80

   19 VarDecl: ID COLON • Type

    ID   shift, and go to state 61
    INT  shift, and go to state 62

    Type  go to state 110


State 81

   15 VarDeclList: VarDecl COMMA • VarDeclList

    ID  shift, and go to state 47

    $default  reduce using rule 16 (VarDeclList)

    VarDeclList  go to state 111
    VarDecl      go to state 49


State 82

   34 FnDecl: FN ID LPAREN ParamDecl RPAREN • ARROW Type
   35       | FN ID LPAREN ParamDecl RPAREN •

    ARROW  shift, and go to state 112

    $default  reduce using rule 35 (FnDecl)


State 83

   17 VarDecl: ID LBRACKET NUM RBRACKET • COLON Type
   18        | ID LBRACKET NUM RBRACKET •
   21 VarDef: ID LBRACKET NUM RBRACKET • COLON Type ASSIGN LBRACE RightValList RBRACE
   22       | ID LBRACKET NUM RBRACKET • ASSIGN LBRACE RightValList RBRACE

    ASSIGN  shift, and go to state 113
    COLON   shift, and go to state 114

    $default  reduce using rule 18 (VarDecl)


State 84

   70 ExprUnit: SUB ExprUnit •

    $default  reduce using rule 70 (ExprUnit)


State 85

   58 ArithExpr: ArithExpr • ADD ArithExpr
   59          | ArithExpr • SUB ArithExpr
   60          | ArithExpr • MUL ArithExpr
   61          | ArithExpr • DIV ArithExpr
   65 ExprUnit: LPAREN ArithExpr • RPAREN

    MUL     shift, and go to state 88
    DIV     shift, and go to state 89
    ADD     shift, and go to state 90
    SUB     shift, and go to state 91
    RPAREN  shift, and go to state 115


State 86

   30 LeftVal: LeftVal LBRACKET • ID RBRACKET
   31        | LeftVal LBRACKET • NUM RBRACKET
   67 ExprUnit: LeftVal LBRACKET • ID RBRACKET
   68         | LeftVal LBRACKET • NUM RBRACKET

    ID   shift, and go to state 116
    NUM  shift, and go to state 117


State 87

   32 LeftVal: LeftVal DOT • ID
   69 ExprUnit: LeftVal DOT • ID

    ID  shift, and go to state 118


State 88

   60 ArithExpr: ArithExpr MUL • ArithExpr

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    LPAREN  shift, and go to state 55

    LeftVal    go to state 57
    FnCall     go to state 58
    ArithExpr  go to state 119
    ExprUnit   go to state 60


State 89

   61 ArithExpr: ArithExpr DIV • ArithExpr

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    LPAREN  shift, and go to state 55

    LeftVal    go to state 57
    FnCall     go to state 58
    ArithExpr  go to state 120
    ExprUnit   go to state 60


State 90

   58 ArithExpr: ArithExpr ADD • ArithExpr

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    LPAREN  shift, and go to state 55

    LeftVal    go to state 57
    FnCall     go to state 58
    ArithExpr  go to state 121
    ExprUnit   go to state 60


State 91

   59 ArithExpr: ArithExpr SUB • ArithExpr

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    LPAREN  shift, and go to state 55

    LeftVal    go to state 57
    FnCall     go to state 58
    ArithExpr  go to state 122
    ExprUnit   go to state 60


State 92

   23 VarDef: ID COLON Type ASSIGN • RightVal

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    LPAREN  shift, and go to state 55

    RightVal   go to state 123
    LeftVal    go to state 57
    FnCall     go to state 58
    ArithExpr  go to state 59
    ExprUnit   go to state 60


State 93

   11 StructDef: STRUCT ID LBRACE VarDeclList RBRACE •

    $default  reduce using rule 11 (StructDef)


State 94

   52 FnCall: ID LPAREN RightValList • RPAREN

    RPAREN  shift, and go to state 124


State 95

   25 RightValList: RightVal •
   26             | RightVal • COMMA RightValList

    COMMA  shift, and go to state 125

    $default  reduce using rule 25 (RightValList)


State 96

   77 BoolUOp: NOT •

    $default  reduce using rule 77 (BoolUOp)


State 97

   65 ExprUnit: LPAREN • ArithExpr RPAREN
   71 BoolUnit: LPAREN • ExprUnit ComOp ExprUnit RPAREN
   72         | LPAREN • BoolExpr RPAREN
   73         | LPAREN • BoolUOp BoolUnit RPAREN

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    NOT     shift, and go to state 96
    LPAREN  shift, and go to state 97

    LeftVal    go to state 57
    FnCall     go to state 58
    ArithExpr  go to state 85
    ExprUnit   go to state 126
    BoolUnit   go to state 99
    BoolExpr   go to state 100
    BoolUOp    go to state 101


State 98

   71 BoolUnit: LPAREN ExprUnit • ComOp ExprUnit RPAREN

    LT   shift, and go to state 127
    LE   shift, and go to state 128
    GT   shift, and go to state 129
    GE   shift, and go to state 130
    EQ   shift, and go to state 131
    NEQ  shift, and go to state 132

    ComOp  go to state 133


State 99

   76 BoolExpr: BoolUnit •

    $default  reduce using rule 76 (BoolExpr)


State 100

   72 BoolUnit: LPAREN BoolExpr • RPAREN
   74 BoolExpr: BoolExpr • AND BoolExpr
   75         | BoolExpr • OR BoolExpr

    AND     shift, and go to state 134
    OR      shift, and go to state 135
    RPAREN  shift, and go to state 136


State 101

   73 BoolUnit: LPAREN BoolUOp • BoolUnit RPAREN

    LPAREN  shift, and go to state 68

    BoolUnit  go to state 137


State 102

   55 WhileStmt: WHILE BoolUnit CodeBlock •

    $default  reduce using rule 55 (WhileStmt)


State 103

   53 IfStmt: IF BoolUnit CodeBlock •
   54       | IF BoolUnit CodeBlock • ELSE CodeBlock

    ELSE  shift, and go to state 138

    $default  reduce using rule 53 (IfStmt)


State 104

   56 ReturnStmt: RET RightVal SEMICOLON •

    $default  reduce using rule 56 (ReturnStmt)


State 105

   30 LeftVal: LeftVal LBRACKET ID • RBRACKET

    RBRACKET  shift, and go to state 139


State 106

   31 LeftVal: LeftVal LBRACKET NUM • RBRACKET

    RBRACKET  shift, and go to state 140


State 107

   50 AssignStmt: LeftVal ASSIGN RightVal • SEMICOLON

    SEMICOLON  shift, and go to state 141


State 108

   32 LeftVal: LeftVal DOT ID •

    $default  reduce using rule 32 (LeftVal)


State 109

   17 VarDecl: ID LBRACKET NUM • RBRACKET COLON Type
   18        | ID LBRACKET NUM • RBRACKET

    RBRACKET  shift, and go to state 142


State 110

   19 VarDecl: ID COLON Type •

    $default  reduce using rule 19 (VarDecl)


State 111

   15 VarDeclList: VarDecl COMMA VarDeclList •

    $default  reduce using rule 15 (VarDeclList)


State 112

   34 FnDecl: FN ID LPAREN ParamDecl RPAREN ARROW • Type

    ID   shift, and go to state 61
    INT  shift, and go to state 62

    Type  go to state 143


State 113

   22 VarDef: ID LBRACKET NUM RBRACKET ASSIGN • LBRACE RightValList RBRACE

    LBRACE  shift, and go to state 144


State 114

   17 VarDecl: ID LBRACKET NUM RBRACKET COLON • Type
   21 VarDef: ID LBRACKET NUM RBRACKET COLON • Type ASSIGN LBRACE RightValList RBRACE

    ID   shift, and go to state 61
    INT  shift, and go to state 62

    Type  go to state 145


State 115

   65 ExprUnit: LPAREN ArithExpr RPAREN •

    $default  reduce using rule 65 (ExprUnit)


State 116

   30 LeftVal: LeftVal LBRACKET ID • RBRACKET
   67 ExprUnit: LeftVal LBRACKET ID • RBRACKET

    RBRACKET  shift, and go to state 146


State 117

   31 LeftVal: LeftVal LBRACKET NUM • RBRACKET
   68 ExprUnit: LeftVal LBRACKET NUM • RBRACKET

    RBRACKET  shift, and go to state 147


State 118

   32 LeftVal: LeftVal DOT ID •
   69 ExprUnit: LeftVal DOT ID •

    LBRACKET  reduce using rule 32 (LeftVal)
    DOT       reduce using rule 32 (LeftVal)
    $default  reduce using rule 69 (ExprUnit)


State 119

   58 ArithExpr: ArithExpr • ADD ArithExpr
   59          | ArithExpr • SUB ArithExpr
   60          | ArithExpr • MUL ArithExpr
   60          | ArithExpr MUL ArithExpr •
   61          | ArithExpr • DIV ArithExpr

    $default  reduce using rule 60 (ArithExpr)


State 120

   58 ArithExpr: ArithExpr • ADD ArithExpr
   59          | ArithExpr • SUB ArithExpr
   60          | ArithExpr • MUL ArithExpr
   61          | ArithExpr • DIV ArithExpr
   61          | ArithExpr DIV ArithExpr •

    $default  reduce using rule 61 (ArithExpr)


State 121

   58 ArithExpr: ArithExpr • ADD ArithExpr
   58          | ArithExpr ADD ArithExpr •
   59          | ArithExpr • SUB ArithExpr
   60          | ArithExpr • MUL ArithExpr
   61          | ArithExpr • DIV ArithExpr

    MUL  shift, and go to state 88
    DIV  shift, and go to state 89

    $default  reduce using rule 58 (ArithExpr)


State 122

   58 ArithExpr: ArithExpr • ADD ArithExpr
   59          | ArithExpr • SUB ArithExpr
   59          | ArithExpr SUB ArithExpr •
   60          | ArithExpr • MUL ArithExpr
   61          | ArithExpr • DIV ArithExpr

    MUL  shift, and go to state 88
    DIV  shift, and go to state 89

    $default  reduce using rule 59 (ArithExpr)


State 123

   23 VarDef: ID COLON Type ASSIGN RightVal •

    $default  reduce using rule 23 (VarDef)


State 124

   52 FnCall: ID LPAREN RightValList RPAREN •

    $default  reduce using rule 52 (FnCall)


State 125

   26 RightValList: RightVal COMMA • RightValList

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    LPAREN  shift, and go to state 55

    $default  reduce using rule 27 (RightValList)

    RightValList  go to state 148
    RightVal      go to state 95
    LeftVal       go to state 57
    FnCall        go to state 58
    ArithExpr     go to state 59
    ExprUnit      go to state 60


State 126

   62 ArithExpr: ExprUnit •
   71 BoolUnit: LPAREN ExprUnit • ComOp ExprUnit RPAREN

    LT   shift, and go to state 127
    LE   shift, and go to state 128
    GT   shift, and go to state 129
    GE   shift, and go to state 130
    EQ   shift, and go to state 131
    NEQ  shift, and go to state 132

    $default  reduce using rule 62 (ArithExpr)

    ComOp  go to state 133


State 127

   78 ComOp: LT •

    $default  reduce using rule 78 (ComOp)


State 128

   79 ComOp: LE •

    $default  reduce using rule 79 (ComOp)


State 129

   80 ComOp: GT •

    $default  reduce using rule 80 (ComOp)


State 130

   81 ComOp: GE •

    $default  reduce using rule 81 (ComOp)


State 131

   82 ComOp: EQ •

    $default  reduce using rule 82 (ComOp)


State 132

   83 ComOp: NEQ •

    $default  reduce using rule 83 (ComOp)


State 133

   71 BoolUnit: LPAREN ExprUnit ComOp • ExprUnit RPAREN

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    LPAREN  shift, and go to state 55

    LeftVal   go to state 57
    FnCall    go to state 58
    ExprUnit  go to state 149


State 134

   74 BoolExpr: BoolExpr AND • BoolExpr

    LPAREN  shift, and go to state 68

    BoolUnit  go to state 99
    BoolExpr  go to state 150


State 135

   75 BoolExpr: BoolExpr OR • BoolExpr

    LPAREN  shift, and go to state 68

    BoolUnit  go to state 99
    BoolExpr  go to state 151


State 136

   72 BoolUnit: LPAREN BoolExpr RPAREN •

    $default  reduce using rule 72 (BoolUnit)


State 137

   73 BoolUnit: LPAREN BoolUOp BoolUnit • RPAREN

    RPAREN  shift, and go to state 152


State 138

   54 IfStmt: IF BoolUnit CodeBlock ELSE • CodeBlock

    LBRACE  shift, and go to state 20

    CodeBlock  go to state 153


State 139

   30 LeftVal: LeftVal LBRACKET ID RBRACKET •

    $default  reduce using rule 30 (LeftVal)


State 140

   31 LeftVal: LeftVal LBRACKET NUM RBRACKET •

    $default  reduce using rule 31 (LeftVal)


State 141

   50 AssignStmt: LeftVal ASSIGN RightVal SEMICOLON •

    $default  reduce using rule 50 (AssignStmt)


State 142

   17 VarDecl: ID LBRACKET NUM RBRACKET • COLON Type
   18        | ID LBRACKET NUM RBRACKET •

    COLON  shift, and go to state 154

    $default  reduce using rule 18 (VarDecl)


State 143

   34 FnDecl: FN ID LPAREN ParamDecl RPAREN ARROW Type •

    $default  reduce using rule 34 (FnDecl)


State 144

   22 VarDef: ID LBRACKET NUM RBRACKET ASSIGN LBRACE • RightValList RBRACE

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    LPAREN  shift, and go to state 55

    $default  reduce using rule 27 (RightValList)

    RightValList  go to state 155
    RightVal      go to state 95
    LeftVal       go to state 57
    FnCall        go to state 58
    ArithExpr     go to state 59
    ExprUnit      go to state 60


State 145

   17 VarDecl: ID LBRACKET NUM RBRACKET COLON Type •
   21 VarDef: ID LBRACKET NUM RBRACKET COLON Type • ASSIGN LBRACE RightValList RBRACE

    ASSIGN  shift, and go to state 156

    $default  reduce using rule 17 (VarDecl)


State 146

   30 LeftVal: LeftVal LBRACKET ID RBRACKET •
   67 ExprUnit: LeftVal LBRACKET ID RBRACKET •

    LBRACKET  reduce using rule 30 (LeftVal)
    DOT       reduce using rule 30 (LeftVal)
    $default  reduce using rule 67 (ExprUnit)


State 147

   31 LeftVal: LeftVal LBRACKET NUM RBRACKET •
   68 ExprUnit: LeftVal LBRACKET NUM RBRACKET •

    LBRACKET  reduce using rule 31 (LeftVal)
    DOT       reduce using rule 31 (LeftVal)
    $default  reduce using rule 68 (ExprUnit)


State 148

   26 RightValList: RightVal COMMA RightValList •

    $default  reduce using rule 26 (RightValList)


State 149

   71 BoolUnit: LPAREN ExprUnit ComOp ExprUnit • RPAREN

    RPAREN  shift, and go to state 157


State 150

   74 BoolExpr: BoolExpr • AND BoolExpr
   74         | BoolExpr AND BoolExpr •
   75         | BoolExpr • OR BoolExpr

    $default  reduce using rule 74 (BoolExpr)


State 151

   74 BoolExpr: BoolExpr • AND BoolExpr
   75         | BoolExpr • OR BoolExpr
   75         | BoolExpr OR BoolExpr •

    AND  shift, and go to state 134

    $default  reduce using rule 75 (BoolExpr)


State 152

   73 BoolUnit: LPAREN BoolUOp BoolUnit RPAREN •

    $default  reduce using rule 73 (BoolUnit)


State 153

   54 IfStmt: IF BoolUnit CodeBlock ELSE CodeBlock •

    $default  reduce using rule 54 (IfStmt)


State 154

   17 VarDecl: ID LBRACKET NUM RBRACKET COLON • Type

    ID   shift, and go to state 61
    INT  shift, and go to state 62

    Type  go to state 158


State 155

   22 VarDef: ID LBRACKET NUM RBRACKET ASSIGN LBRACE RightValList • RBRACE

    RBRACE  shift, and go to state 159


State 156

   21 VarDef: ID LBRACKET NUM RBRACKET COLON Type ASSIGN • LBRACE RightValList RBRACE

    LBRACE  shift, and go to state 160


State 157

   71 BoolUnit: LPAREN ExprUnit ComOp ExprUnit RPAREN •

    $default  reduce using rule 71 (BoolUnit)


State 158

   17 VarDecl: ID LBRACKET NUM RBRACKET COLON Type •

    $default  reduce using rule 17 (VarDecl)


State 159

   22 VarDef: ID LBRACKET NUM RBRACKET ASSIGN LBRACE RightValList RBRACE •

    $default  reduce using rule 22 (VarDef)


State 160

   21 VarDef: ID LBRACKET NUM RBRACKET COLON Type ASSIGN LBRACE • RightValList RBRACE

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SUB     shift, and go to state 54
    LPAREN  shift, and go to state 55

    $default  reduce using rule 27 (RightValList)

    RightValList  go to state 161
    RightVal      go to state 95
    LeftVal       go to state 57
    FnCall        go to state 58
    ArithExpr     go to state 59
    ExprUnit      go to state 60


State 161

   21 VarDef: ID LBRACKET NUM RBRACKET COLON Type ASSIGN LBRACE RightValList • RBRACE

    RBRACE  shift, and go to state 162


State 162

   21 VarDef: ID LBRACKET NUM RBRACKET COLON Type ASSIGN LBRACE RightValList RBRACE •

    $default  reduce using rule 21 (VarDef)
